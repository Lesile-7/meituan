<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">




	<context:annotation-config></context:annotation-config>
	
	<!-- 开启aop相关注解扫描 -->
	<aop:aspectj-autoproxy proxy-target-class="false"></aop:aspectj-autoproxy>
	<!-- 开启注解扫描,并指定包,忽略controller注解,controller注解交给springmvc去扫描,避免重复扫描 -->
	<context:component-scan base-package="cn.jiande.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	
	<!-- 加载数据库连接配置文件,与下面的<加载数据库连接配置文件>的作用一样,二者取其一使用 -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/dbconfig.properties</value>
			</list>
		</property>
	</bean>  -->
	
	<!-- 加载数据库连接配置文件,与上面的<加载数据库连接配置文件>的作用一样,二者取其一使用 -->
	<context:property-placeholder location="classpath:config/dbconfig.properties" />
	
	
	<!-- 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">  
         <!-- 数据库基本信息配置 -->
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />  
   		 <!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}" />
         <!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />
         <!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean>

	<!-- 数据库事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!--  配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--增，删，改-->
			<tx:method name="*Tranc" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<!--  配置参与事务的类 -->
	<aop:config>
		<aop:pointcut expression="execution(* cn.jiande.*.service..*.*(..))"
			id="pc" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
	</aop:config>

	<!-- 与mybatis进行整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!--mybatis 全局配置文件所在位置-->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mybatis/sql/*.xml"></property>
	</bean>

	<!-- 扫描对应的包，生成代理对象-->
	<mybatis-spring:scan base-package="cn.jiande.mapper" />
	
	<!-- 导入二级缓存配置文件 -->
	<import resource="classpath:spring/applicationContext-ehcache.xml" /> 
	<!-- 导入作业调度配置文件 -->
	<!-- <import resource="classpath:spring/applicationContext-quartZ.xml" />  -->
</beans>
